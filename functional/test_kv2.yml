---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: Make sure kv2 secret store is disabled
      hashivault_secret_engine:
        name: "kv2"
        state: absent
      failed_when: False

    - name: Enable kv2 secret store
      hashivault_secret_engine:
        name: "kv2"
        backend: "kv"
        options:
          version: 2
      register: 'vault_secret_enable'
    - assert: { that: "{{vault_secret_enable.changed}} == True" }
    - assert: { that: "{{vault_secret_enable.rc}} == 0" }

    - name: Enable same secret store again and check it doesn't fail
      hashivault_secret_engine:
        name: "kv2"
        backend: "kv"
        options:
          version: 2
      register: 'vault_secret_enable_twice'
    - assert: { that: "{{vault_secret_enable_twice.changed}} == False" }
    - assert: { that: "{{vault_secret_enable_twice.rc}} == 0" }

    - name: Write a value to the kv2 store
      hashivault_write:
        secret: kv2/name
        version: 2
        data:
            value: kv2_stuff
      register: vault_write
    - assert: { that: "{{vault_write.changed}} == True" }
    - assert: { that: "'{{vault_write.msg}}' == 'Secret secret/kv2/name written'" }
    - assert: { that: "{{vault_write.rc}} == 0" }

    - name: Update a value to the kv2 store
      hashivault_write:
        secret: kv2/name
        version: 2
        update: True
        data:
            ingrediant: corn
      register: vault_update
    - assert: { that: "{{vault_update.changed}} == True" }
    - assert: { that: "'{{vault_update.msg}}' == 'Secret secret/kv2/name written'" }
    - assert: { that: "{{vault_update.rc}} == 0" }

    - name: Read the new kv2 value
      hashivault_read:
        secret: kv2/name
        key: ingrediant
        version: 2
      register: vault_read
    - assert: { that: "'{{vault_read.value}}' == 'corn'" }

    - name: Read the kv2 value
      hashivault_read:
        secret: kv2/name
        key: value
        version: 2
      register: vault_read
    - assert: { that: "'{{vault_read.value}}' == 'kv2_stuff'" }

    - set_fact:
       looky_kv2: "{{lookup('hashivault', 'kv2/name', 'value', version=2)}}"
    - assert: { that: "'{{looky_kv2}}' == 'kv2_stuff'" }

    - name: Delete kv2 secret
      hashivault_delete:
        secret: 'kv2/name'
        version: 2
      register: 'vault_secret_delete'
    - assert: { that: "{{vault_secret_delete.changed}} == True" }
    - assert: { that: "{{vault_secret_delete.rc}} == 0" }
    - assert: { that: "'{{vault_secret_delete.msg}}' == 'Secret secret/kv2/name deleted'" }

    - name: Make sure kv2 value is gone
      hashivault_read:
        secret: 'kv2/name'
        version: 2
      register: 'vault_read'
      failed_when: False
    - assert: { that: "{{vault_read.changed}} == False" }
    - assert: { that: "'{{vault_read.msg}}' == 'Secret secret/kv2/name is not in vault'" }

    - name: Tune kv2 secret store
      hashivault_secret_engine:
        backend: kv
        name: kv2
        options:
          version: 2
        config:
          default_lease_ttl: 3600
          max_lease_ttl: 8600
      register: vault_tune
    - assert: { that: "{{ vault_tune.changed }} == True" }
    - assert: { that: "{{ vault_tune.rc }} == 0" }

    - name: Idempotent tuning kv2 secret store
      hashivault_secret_engine:
        backend: kv
        name: kv2
        options:
          version: 2
        config:
          default_lease_ttl: 3600
          max_lease_ttl: 8600
      register: vault_tune
    - assert: { that: "{{ vault_tune.changed }} == False" }
    - assert: { that: "{{ vault_tune.rc }} == 0" }

    - name: Disable kv2 secret store
      hashivault_secret_engine:
        name: "kv2"
        state: absent
      register: 'vault_secret_disable'
    - assert: { that: "{{vault_secret_enable.changed}} == True" }
    - assert: { that: "{{vault_secret_enable.rc}} == 0" }